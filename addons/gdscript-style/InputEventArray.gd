#-----------------------------------------------------------------
#
#           THIS FILE WAS AUTOGENERATED.
#
#           Visit https://github.com/jeancallisti/gdscript-strong-types
#
#
#-----------------------------------------------------------------


# This class is a utility class meant to represent an array of InputEvent.
# it is not meant to be attached to a Node (unless you want to!)
# It exists in two versions (both named 'InputEventArray'): The one in CSharp style (CapitalLetters) or the one in GDScript style (snake_case).
# Just uncomment the version you like the most.

# class_name InputEventArray

# var a:Array = [];

# func _crash(message: String):
#     assert(false, message)

# func _assert_InputEvent(value: InputEvent):
#     if (!value is InputEvent):
#         _crash("value was expected to be of type InputEvent")

# func _assert_not_null_InputEvent(value: InputEvent):
#     if (value == null):
#         _crash("value was expected to be not null")
#     _assert_InputEvent(value)

# func set_at(position: int, value: InputEvent):
#     _assert_InputEvent(value);
#     a[position] = value;

# func get_at(position: int) -> InputEvent:
#     return a[position];

# func add(value: InputEvent):
#     _assert_InputEvent(value);
#     a.append(value);

# Same as add, but with a different name.
# func append(value: InputEvent):
#     _assert_InputEvent(value);
#     a.append(value);

# func remove(position: int):
#     a.remove(position);

# func size() -> int:
#     return a.size();

# func clear():
#     a.clear();

# # func Contains(value: InputEvent) -> bool:
# #     _assert_InputEvent(value);
# #     return a.contains(value);

